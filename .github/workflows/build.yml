name: Python application

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9, 3.12]  # Adicionando mais versões do Python para testes

    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13.0-alpine
        ports:
          - 5432:5432
        environment:
          POSTGRES_USER: bookstore_dev
          POSTGRES_PASSWORD: bookstore_dev
          POSTGRES_DB: bookstore_dev_db
        options:
          --health-cmd="pg_isready -U bookstore_dev" 
          --health-timeout=5s 
          --health-start-period=10s 
          --health-retries=5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install --upgrade poetry

    - name: View poetry --help
      run: poetry --help

    - name: Install dependencies
      shell: bash
      run: python -m poetry install

    - name: Wait for PostgreSQL to be ready
      run: |
        ./wait-for-it.sh db:5432 --timeout=30 --strict -- echo "PostgreSQL is ready"

    - name: Run tests
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DEBUG: 1
        DJANGO_ALLOWED_HOSTS: localhost 127.0.0.1 [::1]
        SQL_ENGINE: django.db.backends.postgresql
        SQL_DATABASE: bookstore_dev_db
        SQL_USER: bookstore_dev
        SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
        SQL_HOST: db  # Certificando-se que o nome do serviço 'db' seja usado
        SQL_PORT: 5432
      run: |
        poetry run python manage.py test