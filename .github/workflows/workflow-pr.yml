name: Python Pull Request Workflow
on: [pull_request]

jobs:
  qa:
    name: Quality check
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:13.0-alpine
        ports:
          - 5432:5432
        environment:
          POSTGRES_USER: bookstore_dev
          POSTGRES_PASSWORD: bookstore_dev
          POSTGRES_DB: bookstore_dev_db
        options:
          --health-cmd="pg_isready -U bookstore_dev" 
          --health-timeout=5s 
          --health-start-period=10s 
          --health-retries=5

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python
        uses: actions/setup-python@master
        with:
          python-version: 3.12

      - name: Install poetry
        run: |
          pip install -U pip
          pip install poetry
          poetry install
        env:
          POETRY_VIRTUALENVS_CREATE: false

      - name: View poetry --help
        run: poetry --help

      - name: Install dependencies
        shell: bash
        run: python -m poetry install

      # Espera o PostgreSQL ficar pronto para a conexão
      - name: Wait for PostgreSQL to be ready
        run: |
          curl -sSL https://github.com/vishnubob/wait-for-it/raw/master/wait-for-it.sh -o wait-for-it.sh
          chmod +x wait-for-it.sh
          ./wait-for-it.sh db:5432 --timeout=60 --strict -- echo "PostgreSQL is ready"

      - name: Test
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          SQL_HOST: db  # O nome do serviço do banco de dados
        run: |
          poetry run python manage.py test

      - name: Wemake Python Stylguide
        uses: wemake-services/wemake-python-styleguide@0.16.0
        continue-on-error: true
        with:
          reporter: 'github-pr-review'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}